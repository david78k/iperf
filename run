#!/bin/bash
# iperf testing script

# 6.5ms from hotel.futuregrid.org
server=india.futuregrid.org 

# 28ms from hotel.futuregrid.org
#server=alamo.futuregrid.org 

# 76ms from hotel.futuregrid.org
#server=sierra.futuregrid.org 

# RTT (ms), LAN=0.3-0.5ms
# IMPORTANT: RTT should be halved later
#RTTs=( 160 ) # 40tcps failed
#RTTs=( 20 60 10 140 160 ) # 30tcp failed
RTT=76
#RTTs=( 76 )
#RTTs=( LAN 2 5 10 20 80 180 )

runs=( 1 2 3 4 5 6 7 8 9 10 )
#runs=( 21 22 23 24 25 26 27 28 29 30 )
#runs=( 24 25 26 27 28 29 30 )
# failed
#runs=( 23 ) 
#run=12

# number of parallel TCP connections
#Ns=( 1 2 3 4 5 6 7 8 9 10 12 14 16 18 20 )
Ns=( 1 2 3 4 5 6 7 8 9 10 12 14 16 18 20 30 40 50 60 70 80 90 100 )
#Ns=( 1 2 )
#Ns=( 30 40 )

# total run time in seconds
totaltime=60
#totaltime=120

#ssh $router service tc stop
ssh $server pkill iperf  
#ssh $server iperf3 -s > server.log &
ssh $server iperf -s > server.log &

sleep 3

#for RTT in ${RTTs[@]};
for run in ${runs[@]};
do
	#echo RTT = ${RTT}ms
#	if [ $RTT != "LAN" ]; then
		# IMPORTANT: RTT should be halved 
#		ssh $router service tc delay `expr $RTT / 2`
		#ssh $router service tc delay $RTT
#	fi

	#logfile=${RTT}ms-r${run}.log
	logfile=r${run}.log
	rm $logfile

	echo -n "Run = $run: "
	for N in ${Ns[@]}
	do
		echo -n "$N "
		echo N = $N >> $logfile
		#iperf3 -c $server -P $N -t 30 -O 45 >> $logfile
		iperf -c $server -P $N -t $totaltime >> $logfile
	done
#	ssh $router service tc stop
	echo
done

#echo

# stop iperf
ssh $server pkill iperf
#pgrep -fl iperf| awk '{print $1}' | xargs kill -9
#ssh $server "pgrep -fl iperf| awk '{print $1}' | xargs kill -9"

